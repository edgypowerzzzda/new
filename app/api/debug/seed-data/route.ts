import { NextResponse } from "next/server"
import { safeSQL, isDatabaseConnected } from "@/lib/db"

export async function POST() {
  try {
    if (!isDatabaseConnected()) {
      return NextResponse.json({ error: "Database not connected" }, { status: 500 })
    }

    console.log("üå± Seeding database with initial data...")

    // Add brands
    await safeSQL`
      INSERT INTO brands (name, description, website) VALUES
      ('Yamaha', '–Ø–ø–æ–Ω—Å–∫–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', 'https://yamaha.com'),
      ('Shure', '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∞—è—Å—è –Ω–∞ –∞—É–¥–∏–æ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏', 'https://shure.com'),
      ('Casio', '–Ø–ø–æ–Ω—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', 'https://casio.com'),
      ('Korg', '–Ø–ø–æ–Ω—Å–∫–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤', 'https://korg.com'),
      ('Fender', '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –≥–∏—Ç–∞—Ä –∏ —É—Å–∏–ª–∏—Ç–µ–ª–µ–π', 'https://fender.com'),
      ('Gibson', '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å –≥–∏—Ç–∞—Ä', 'https://gibson.com')
      ON CONFLICT (name) DO NOTHING
    `

    // Add categories
    await safeSQL`
      INSERT INTO categories (name, slug, parent_id, description) VALUES
      ('–ì–∏—Ç–∞—Ä—ã', 'guitars', NULL, '–ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ –∏ —ç–ª–µ–∫—Ç—Ä–æ–≥–∏—Ç–∞—Ä—ã'),
      ('–ö–ª–∞–≤–∏—à–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', 'keyboards', NULL, '–ü–∏–∞–Ω–∏–Ω–æ, —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä—ã, MIDI-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã'),
      ('–£–¥–∞—Ä–Ω—ã–µ', 'drums', NULL, '–ë–∞—Ä–∞–±–∞–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –ø–µ—Ä–∫—É—Å—Å–∏—è'),
      ('–ú–∏–∫—Ä–æ—Ñ–æ–Ω—ã', 'microphones', NULL, '–°—Ç—É–¥–∏–π–Ω—ã–µ –∏ –∫–æ–Ω—Ü–µ—Ä—Ç–Ω—ã–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω—ã'),
      ('DJ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ', 'dj-equipment', NULL, '–ú–∏–∫—à–µ—Ä—ã, –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç–µ–ª–∏, –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã'),
      ('–ö–æ–º–º—É—Ç–∞—Ü–∏—è', 'cables-connectors', NULL, '–ö–∞–±–µ–ª–∏, —Ä–∞–∑—ä–µ–º—ã, –∞–¥–∞–ø—Ç–µ—Ä—ã')
      ON CONFLICT (slug) DO NOTHING
    `

    // Add subcategories
    const guitarsCategoryResult = await safeSQL`SELECT id FROM categories WHERE slug = 'guitars'`
    if (guitarsCategoryResult && guitarsCategoryResult.length > 0) {
      const guitarsId = guitarsCategoryResult[0].id
      await safeSQL`
        INSERT INTO categories (name, slug, parent_id, description) VALUES
        ('–ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ –≥–∏—Ç–∞—Ä—ã', 'acoustic-guitars', ${guitarsId}, '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –∏ —ç—Å—Ç—Ä–∞–¥–Ω—ã–µ –∞–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ –≥–∏—Ç–∞—Ä—ã'),
        ('–≠–ª–µ–∫—Ç—Ä–æ–≥–∏—Ç–∞—Ä—ã', 'electric-guitars', ${guitarsId}, '–≠–ª–µ–∫—Ç—Ä–æ–≥–∏—Ç–∞—Ä—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤'),
        ('–£—Å–∏–ª–∏—Ç–µ–ª–∏ –¥–ª—è –≥–∏—Ç–∞—Ä—ã', 'guitar-amplifiers', ${guitarsId}, '–õ–∞–º–ø–æ–≤—ã–µ –∏ —Ç—Ä–∞–Ω–∑–∏—Å—Ç–æ—Ä–Ω—ã–µ —É—Å–∏–ª–∏—Ç–µ–ª–∏')
        ON CONFLICT (slug) DO NOTHING
      `
    }

    // Add sample products
    const yamahaResult = await safeSQL`SELECT id FROM brands WHERE name = 'Yamaha'`
    const fenderResult = await safeSQL`SELECT id FROM brands WHERE name = 'Fender'`
    const shureResult = await safeSQL`SELECT id FROM brands WHERE name = 'Shure'`
    const casioResult = await safeSQL`SELECT id FROM brands WHERE name = 'Casio'`

    const acousticResult = await safeSQL`SELECT id FROM categories WHERE slug = 'acoustic-guitars'`
    const electricResult = await safeSQL`SELECT id FROM categories WHERE slug = 'electric-guitars'`
    const microphonesResult = await safeSQL`SELECT id FROM categories WHERE slug = 'microphones'`
    const keyboardsResult = await safeSQL`SELECT id FROM categories WHERE slug = 'keyboards'`

    if (yamahaResult?.length > 0 && acousticResult?.length > 0) {
      await safeSQL`
        INSERT INTO products (name, slug, description, price, brand_id, category_id, sku, stock_quantity, is_featured, is_new) VALUES
        (
          'Yamaha FG830 –ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∞—è –≥–∏—Ç–∞—Ä–∞',
          'yamaha-fg830-acoustic-guitar',
          '–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è –∞–∫—É—Å—Ç–∏—á–µ—Å–∫–∞—è –≥–∏—Ç–∞—Ä–∞ —Å –≤–µ—Ä—Ö–Ω–µ–π –¥–µ–∫–æ–π –∏–∑ –º–∞—Å—Å–∏–≤–∞ –µ–ª–∏ –∏ –∫–æ—Ä–ø—É—Å–æ–º –∏–∑ —Ä–æ–∑–æ–≤–æ–≥–æ –¥–µ—Ä–µ–≤–∞',
          25000.00,
          ${yamahaResult[0].id},
          ${acousticResult[0].id},
          'YAM-FG830',
          15,
          true,
          false
        )
        ON CONFLICT (slug) DO NOTHING
      `
    }

    if (fenderResult?.length > 0 && electricResult?.length > 0) {
      await safeSQL`
        INSERT INTO products (name, slug, description, price, brand_id, category_id, sku, stock_quantity, is_featured, is_new) VALUES
        (
          'Fender Player Stratocaster',
          'fender-player-stratocaster',
          '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è —ç–ª–µ–∫—Ç—Ä–æ–≥–∏—Ç–∞—Ä–∞ —Å —Ç—Ä–µ–º—è –∑–≤—É–∫–æ—Å–Ω–∏–º–∞—Ç–µ–ª—è–º–∏ –∏ –∫–ª–µ–Ω–æ–≤—ã–º –≥—Ä–∏—Ñ–æ–º',
          65000.00,
          ${fenderResult[0].id},
          ${electricResult[0].id},
          'FEN-PLSTR',
          8,
          true,
          true
        )
        ON CONFLICT (slug) DO NOTHING
      `
    }

    console.log("‚úÖ Data seeded successfully")

    return NextResponse.json({
      success: true,
      message: "Database seeded successfully",
    })
  } catch (error) {
    console.error("üí• Seeding error:", error)
    return NextResponse.json(
      {
        error: "Seeding failed",
        details: error instanceof Error ? error.message : String(error),
      },
      { status: 500 },
    )
  }
}
